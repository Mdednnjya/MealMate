generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String    @map("name")
  email          String    @unique
  password       String
  phone_number   String
  profile_photo  String?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  role           Role      @default(USER)
  donations      Donation[]
  requests       Request[]
  notifications  Notification[]
}

model Donation {
  id           String    @id @default(uuid())
  user_id      String
  title        String
  notes        String?
  location     String
  quantity     Int
  expiry_date  DateTime
  status       DonationStatus @default(AVAILABLE)
  image        String?
  type         DonationType
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  user         User      @relation(fields: [user_id], references: [id])
  requests     Request[]
  notifications Notification[]
}

model Request {
  id           String    @id @default(uuid())
  user_id      String
  donation_id  String
  status       RequestStatus @default(PENDING)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  user         User      @relation(fields: [user_id], references: [id])
  donation     Donation  @relation(fields: [donation_id], references: [id])
  notifications Notification[]
}

model Notification {
  id           String    @id @default(uuid())
  user_id      String
  request_id   String?
  donation_id  String?
  type         NotificationType
  message      String
  is_read      Boolean   @default(false)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  user         User      @relation(fields: [user_id], references: [id])
  request      Request?  @relation(fields: [request_id], references: [id])
  donation     Donation? @relation(fields: [donation_id], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum DonationStatus {
  AVAILABLE
  REQUESTED
  COMPLETED
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
  COMPLETED
}

enum DonationType {
  FOOD
  DRINK
  MEAL_PACKAGE
}

enum NotificationType {
  EMAIL
  SYSTEM
}
